let DataTypes,Model,sequelize,Users;_11b‍.x([["default",()=>_11b‍.o]]);_11b‍.w("sequelize",[["DataTypes",["DataTypes"],function(v){DataTypes=v}],["Model",["Model"],function(v){Model=v}]]);_11b‍.w("../services/sequelize",[["default",["sequelize"],function(v){sequelize=v}]]);_11b‍.w("./Users",[["default",["Users"],function(v){Users=v}]]);



class Notes extends Model {}

Notes.init(
  {
    id: {
      type: DataTypes.BIGINT.UNSIGNED,
      allowNull: false,
      autoIncrement: true,
      primaryKey: true,
    },
    title: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    content: {
      type: DataTypes.TEXT("long"),
      allowNull: false,
    },
  },
  {
    modelName: "notes",
    tableName: "notes",
    sequelize,
  }
);

Notes.belongsTo(Users, {
  foreignKey: "userId",
});

Users.hasOne(Notes, {
  foreignKey: "userId",
  as: "note",
});
Users.hasMany(Notes, {
  foreignKey: "userId",
  as: "notes",
});

_11b‍.d(Notes);
